name: Backend CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test Backend

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run tests
        run: mvn clean test
        working-directory: ./backend

      - name: Generate test report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Backend Tests
          path: backend/target/surefire-reports/*.xml
          reporter: java-junit

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Build and Push Backend

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests
        working-directory: ./backend

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_USERNAME }}/backend:latest
            ${{ env.DOCKER_USERNAME }}/backend:${{ env.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Deploy Backend
    environment: production

    steps:
      - name: Deploy to production
        run: |
          echo "Deploying backend image: ${{ env.DOCKER_USERNAME }}/backend:${{ env.IMAGE_TAG }}"
          # Add your deployment commands here
          # Examples:
          # kubectl set image deployment/backend backend=${{ env.DOCKER_USERNAME }}/backend:${{ env.IMAGE_TAG }}
          # docker-compose pull && docker-compose up -d
          # ssh user@server "docker pull ${{ env.DOCKER_USERNAME }}/backend:${{ env.IMAGE_TAG }} && docker stop backend && docker run -d --name backend ${{ env.DOCKER_USERNAME }}/backend:${{ env.IMAGE_TAG }}"

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Backend deployment successful!"
          else
            echo "❌ Backend deployment failed!"
          fi
          # Add notification logic here (Slack, email, etc.)
