name: Frontend CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  IMAGE_TAG: ${{ github.sha }}
  NODE_VERSION: '20'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test Frontend
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint
        continue-on-error: true

      - name: Run unit tests
        run: npm test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: success()
        with:
          directory: ./frontend/coverage
          flags: frontend

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Build and Push Frontend
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build production app
        run: npm run build --prod

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_USERNAME }}/frontend:latest
            ${{ env.DOCKER_USERNAME }}/frontend:${{ env.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Deploy Frontend
    environment: production

    steps:
      - name: Deploy to production
        run: |
          echo "Deploying frontend image: ${{ env.DOCKER_USERNAME }}/frontend:${{ env.IMAGE_TAG }}"
          # Add your deployment commands here
          # Examples:
          # kubectl set image deployment/frontend frontend=${{ env.DOCKER_USERNAME }}/frontend:${{ env.IMAGE_TAG }}
          # docker-compose pull && docker-compose up -d
          # ssh user@server "docker pull ${{ env.DOCKER_USERNAME }}/frontend:${{ env.IMAGE_TAG }} && docker stop frontend && docker run -d --name frontend -p 80:80 ${{ env.DOCKER_USERNAME }}/frontend:${{ env.IMAGE_TAG }}"

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Frontend deployment successful!"
          else
            echo "❌ Frontend deployment failed!"
          fi
          # Add notification logic here (Slack, email, etc.)
      - name: Push Docker image frontend
        run: docker push ytahari150/frontend:latest